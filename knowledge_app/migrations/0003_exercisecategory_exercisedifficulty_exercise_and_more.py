# Generated by Django 5.2.4 on 2025-07-30 16:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knowledge_app', '0002_popularsearch_searchfilter_knowledgepointindex_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名称')),
                ('slug', models.SlugField(unique=True, verbose_name='URL标识')),
                ('description', models.TextField(blank=True, verbose_name='分类描述')),
                ('icon', models.CharField(default='📚', max_length=10, verbose_name='图标')),
                ('color', models.CharField(default='#4ecdc4', max_length=7, verbose_name='主题色')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '练习题分类',
                'verbose_name_plural': '练习题分类',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseDifficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='难度名称')),
                ('level', models.PositiveIntegerField(unique=True, verbose_name='难度等级')),
                ('color', models.CharField(default='#28a745', max_length=7, verbose_name='颜色')),
                ('description', models.TextField(blank=True, verbose_name='难度描述')),
            ],
            options={
                'verbose_name': '练习题难度',
                'verbose_name_plural': '练习题难度',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='题目标题')),
                ('slug', models.SlugField(unique=True, verbose_name='URL标识')),
                ('question_type', models.CharField(choices=[('single_choice', '单选题'), ('multiple_choice', '多选题'), ('true_false', '判断题'), ('fill_blank', '填空题'), ('short_answer', '简答题'), ('coding', '编程题')], max_length=20, verbose_name='题目类型')),
                ('question_text', models.TextField(verbose_name='题目描述')),
                ('question_image', models.ImageField(blank=True, null=True, upload_to='exercises/images/', verbose_name='题目图片')),
                ('options', models.JSONField(blank=True, default=dict, verbose_name='选项')),
                ('correct_answer', models.TextField(verbose_name='正确答案')),
                ('explanation', models.TextField(blank=True, verbose_name='答案解析')),
                ('explanation_image', models.ImageField(blank=True, null=True, upload_to='exercises/explanations/', verbose_name='解析图片')),
                ('hints', models.JSONField(blank=True, default=list, verbose_name='提示')),
                ('tags', models.CharField(blank=True, help_text='用逗号分隔', max_length=200, verbose_name='标签')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='浏览次数')),
                ('attempt_count', models.PositiveIntegerField(default=0, verbose_name='尝试次数')),
                ('correct_count', models.PositiveIntegerField(default=0, verbose_name='正确次数')),
                ('time_limit', models.PositiveIntegerField(default=0, help_text='0表示无限制', verbose_name='时间限制')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_featured', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exercisecategory', verbose_name='分类')),
                ('difficulty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exercisedifficulty', verbose_name='难度')),
            ],
            options={
                'verbose_name': '练习题',
                'verbose_name_plural': '练习题',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='题集名称')),
                ('slug', models.SlugField(unique=True, verbose_name='URL标识')),
                ('description', models.TextField(blank=True, verbose_name='题集描述')),
                ('time_limit', models.PositiveIntegerField(default=0, help_text='分钟，0表示无限制', verbose_name='总时间限制')),
                ('shuffle_questions', models.BooleanField(default=False, verbose_name='随机题目顺序')),
                ('shuffle_options', models.BooleanField(default=False, verbose_name='随机选项顺序')),
                ('show_result_immediately', models.BooleanField(default=True, verbose_name='立即显示结果')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_public', models.BooleanField(default=True, verbose_name='是否公开')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exercisecategory', verbose_name='分类')),
            ],
            options={
                'verbose_name': '练习题集',
                'verbose_name_plural': '练习题集',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseSetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('points', models.PositiveIntegerField(default=1, verbose_name='分值')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exercise', verbose_name='练习题')),
                ('exercise_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exerciseset', verbose_name='题集')),
            ],
            options={
                'verbose_name': '练习题集项目',
                'verbose_name_plural': '练习题集项目',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='exerciseset',
            name='exercises',
            field=models.ManyToManyField(through='knowledge_app.ExerciseSetItem', to='knowledge_app.exercise', verbose_name='练习题'),
        ),
        migrations.CreateModel(
            name='UserExerciseAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.TextField(verbose_name='用户答案')),
                ('is_correct', models.BooleanField(verbose_name='是否正确')),
                ('score', models.FloatField(default=0, verbose_name='得分')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('submit_time', models.DateTimeField(verbose_name='提交时间')),
                ('time_spent', models.PositiveIntegerField(verbose_name='用时(秒)')),
                ('hints_used', models.JSONField(blank=True, default=list, verbose_name='使用的提示')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exercise', verbose_name='练习题')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户练习记录',
                'verbose_name_plural': '用户练习记录',
                'ordering': ['-submit_time'],
            },
        ),
        migrations.CreateModel(
            name='UserExerciseSetAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField(default=0, verbose_name='总分')),
                ('max_score', models.FloatField(default=0, verbose_name='满分')),
                ('correct_count', models.PositiveIntegerField(default=0, verbose_name='正确题数')),
                ('total_count', models.PositiveIntegerField(default=0, verbose_name='总题数')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('submit_time', models.DateTimeField(blank=True, null=True, verbose_name='提交时间')),
                ('time_spent', models.PositiveIntegerField(default=0, verbose_name='用时(秒)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('exercise_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_app.exerciseset', verbose_name='练习题集')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户题集练习记录',
                'verbose_name_plural': '用户题集练习记录',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='exercise',
            index=models.Index(fields=['category', 'difficulty'], name='knowledge_a_categor_81a495_idx'),
        ),
        migrations.AddIndex(
            model_name='exercise',
            index=models.Index(fields=['question_type'], name='knowledge_a_questio_fe8231_idx'),
        ),
        migrations.AddIndex(
            model_name='exercise',
            index=models.Index(fields=['-created_at'], name='knowledge_a_created_cda40e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exercisesetitem',
            unique_together={('exercise_set', 'exercise')},
        ),
        migrations.AddIndex(
            model_name='userexerciseattempt',
            index=models.Index(fields=['user', '-submit_time'], name='knowledge_a_user_id_0a1233_idx'),
        ),
        migrations.AddIndex(
            model_name='userexerciseattempt',
            index=models.Index(fields=['exercise', '-submit_time'], name='knowledge_a_exercis_00a930_idx'),
        ),
    ]
