# Generated by Django 5.2.4 on 2025-07-30 11:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='成就名称')),
                ('description', models.TextField(verbose_name='成就描述')),
                ('icon', models.CharField(default='🏆', max_length=10, verbose_name='图标')),
                ('category', models.CharField(choices=[('learning', '学习成就'), ('time', '时间成就'), ('streak', '连续成就'), ('completion', '完成成就'), ('special', '特殊成就')], default='learning', max_length=50, verbose_name='成就类别')),
                ('condition_type', models.CharField(choices=[('knowledge_points', '完成知识点数量'), ('study_time', '累计学习时间'), ('streak_days', '连续学习天数'), ('category_complete', '完成分类'), ('first_login', '首次登录')], max_length=50, verbose_name='达成条件类型')),
                ('condition_value', models.PositiveIntegerField(verbose_name='条件数值')),
                ('points_reward', models.PositiveIntegerField(default=0, verbose_name='奖励积分')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '成就',
                'verbose_name_plural': '成就',
            },
        ),
        migrations.CreateModel(
            name='KnowledgePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100, unique=True, verbose_name='标识符')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('category', models.CharField(max_length=100, verbose_name='分类')),
                ('subcategory', models.CharField(max_length=100, verbose_name='子分类')),
                ('difficulty', models.CharField(choices=[('beginner', '初级'), ('intermediate', '中级'), ('advanced', '高级')], default='beginner', max_length=20, verbose_name='难度')),
                ('estimated_time', models.PositiveIntegerField(default=30, verbose_name='预计学习时间(分钟)')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '知识点',
                'verbose_name_plural': '知识点',
            },
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='学习时长(秒)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='是否完成')),
                ('progress_percentage', models.FloatField(default=0.0, verbose_name='进度百分比')),
                ('knowledge_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.knowledgepoint', verbose_name='知识点')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '学习会话',
                'verbose_name_plural': '学习会话',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='获得时间')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.achievement', verbose_name='成就')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户成就',
                'verbose_name_plural': '用户成就',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='UserKnowledgeProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', '未开始'), ('in_progress', '学习中'), ('completed', '已完成'), ('mastered', '已掌握')], default='not_started', max_length=20, verbose_name='学习状态')),
                ('progress_percentage', models.FloatField(default=0.0, verbose_name='进度百分比')),
                ('total_study_time', models.PositiveIntegerField(default=0, verbose_name='总学习时间(秒)')),
                ('first_accessed', models.DateTimeField(auto_now_add=True, verbose_name='首次访问')),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='最后访问')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('knowledge_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.knowledgepoint', verbose_name='知识点')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户知识点进度',
                'verbose_name_plural': '用户知识点进度',
                'unique_together': {('user', 'knowledge_point')},
            },
        ),
    ]
